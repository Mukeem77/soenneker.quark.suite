@namespace Soenneker.Quark
@inherits Soenneker.Quark.Element
@implements IBarLink

<Anchor To="@To" Target="@Target" @attributes="BuildAttributes()" >
    @ChildContent
</Anchor>

@code {
    public override string? ThemeKey { get; set; } = "BarLink";

    [Parameter]
    public string? To { get; set; }

    [Parameter]
    public Target? Target { get; set; }

    [Parameter]
    public bool Active { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    [CascadingParameter]
    public BarMode Mode { get; set; } = BarMode.Horizontal;


    protected override Dictionary<string, object> BuildAttributes()
    {
        var attributes = base.BuildAttributes();

        AppendToClassAttr(attributes, "nav-link");
        if (Active)
            AppendToClassAttr(attributes, "active");
        if (Disabled)
            AppendToClassAttr(attributes, "disabled");

        // For vertical modes, add specific styles
        if (Mode != BarMode.Horizontal)
        {
            AppendStyleDeclAttr(attributes, "display: flex");
            AppendStyleDeclAttr(attributes, "align-items: center");
            AppendStyleDeclAttr(attributes, "width: 100%");
            AppendStyleDeclAttr(attributes, "padding: 0.75rem 1rem");
            AppendStyleDeclAttr(attributes, "border-radius: 0");
            AppendStyleDeclAttr(attributes, "border-bottom: 1px solid var(--bs-border-color-translucent, rgba(0, 0, 0, 0.1))");
        }

        if (Disabled)
            attributes["aria-disabled"] = "true";

        return attributes;
    }

}
