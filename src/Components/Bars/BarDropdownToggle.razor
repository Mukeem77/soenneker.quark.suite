@namespace Soenneker.Quark

@inherits Soenneker.Quark.Element

<button @attributes="BuildAttributes()" data-bs-toggle="collapse" data-bs-target="#@TargetId" aria-expanded="@Expanded.ToString().ToLower()">
    @ChildContent
</button>

@code {
    public override string? ThemeKey { get; set; } = "BarDropdownToggle";

    [Parameter]
    public EventCallback<MouseEventArgs> OnToggle { get; set; }

    [Parameter]
    public bool? Disabled { get; set; }

    [Parameter]
    public double Indentation { get; set; } = 1.5d;

    [Parameter]
    public bool Expanded { get; set; } = false;

    [CascadingParameter]
    public BarMode Mode { get; set; } = BarMode.Horizontal;

    [CascadingParameter]
    public BarDropdown? ParentDropdown { get; set; }

    [CascadingParameter]
    public bool SidebarCollapsed { get; set; }

    private string TargetId => ParentDropdown?.CollapseId ?? "";

    protected override Dictionary<string, object> BuildAttributes()
    {
        var attributes = base.BuildAttributes();

        var baseClass = "btn btn-toggle align-items-center rounded";
        
        if (!Expanded)
            baseClass = $"{baseClass} collapsed";
        
        if (Disabled == true)
            baseClass = $"{baseClass} disabled";

        // For vertical mode, add specific styling
        if (Mode != BarMode.Horizontal)
        {
            baseClass = $"{baseClass} d-flex align-items-center position-relative";
            if (!SidebarCollapsed)
                baseClass = $"{baseClass} w-100";
        }

        AppendToClassAttr(attributes, baseClass);

        if (Disabled == true)
            attributes["aria-disabled"] = "true";

        return attributes;
    }
}